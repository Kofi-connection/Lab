
#include <stdio.h> 
#include <string.h> 
#include <stdlib.h> 
int main (void){
  convert_to_words("33");
  return 0;
}

void convert_to_words(char *num) 
{ 
    int len = strlen(num); 
  
    
    if (len == 0) { 
        fprintf(stderr, "empty string\n"); 
        return; 
    } 
    if (len >= 3) { 
        fprintf(stderr, "Type in numbers less than 100\n"); 
        return; 
    } 
  
    
    char *single_digits[] = { "zero", "one", "two", "three", "four","five",  "six", "seven", "eight", "nine"}; 
  
    /* The first string is not used, it is to make  
        array indexing simple */
    char *two_digits[] = {"", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"}; 
  
    
    char *tens_multiple[] = {"", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"}; 
  
   
  
    /* Used for debugging purpose only */
    printf("\n%s: ", num); 
  
    /* For single digit number */
    if (len == 1) { 
        printf("%s\n", single_digits[*num - '0']); 
        return; 
    } 
  
    /* Iterate while num is not '\0' */
    while (*num != '\0') { 
  
        
        if (len<=2) { 
            
            if (*num == '1') { 
                int sum = *num - '0' + *(num + 1)- '0'; 
                printf("%s\n", two_digits[sum]); 
                return; 
            } 
  
            /* Need to explicitely handle 20 */
            else if (*num == '2' && *(num + 1) == '0') { 
                printf("twenty\n"); 
                return; 
            } 
  
            /* Rest of the two digit numbers i.e., 21 to 99 */
            else { 
                int i = *num - '0'; 
                printf("%s ", i? tens_multiple[i]: ""); 
                ++num; 
                if (*num != '0') 
                    printf("%s ", single_digits[*num - '0']); 
            } 
        } 
        ++num; 
    }
} 
